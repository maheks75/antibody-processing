#script to filter the consensus seqs from the file that are below 35% in similarity
with open("4Gs_146147_sel_All_con.txt", "r") as file:
    lines = file.readlines()

# Split lines into header and sequence parts
header_seq_pairs = []
current_header = None
current_sequence = ""

for line in lines:
    if line.startswith(">"):
        if current_header is not None:
            header_seq_pairs.append((current_header, current_sequence))
        current_header = line.strip()
        current_sequence = ""
    else:
        current_sequence += line.strip()
# Add the last pair to the list
if current_header is not None:
    header_seq_pairs.append((current_header, current_sequence))

with open("Arranged_4Gs-146147_unsel.txt", "w") as outfile:
    for header, sequence in header_seq_pairs:
        header_parts = header.split(':')
        if len(header_parts) >= 2 and float(header_parts[3]) >= 35:
            outfile.write(f">{header_parts[1]}:{header_parts[2]}:{header_parts[3]}\n{sequence}\n")

#script to extract the umis from the consensus file

with open("Arranged_4Gs-146147_unsel.txt", "r") as file:
    lines = file.readlines()

# Split lines into header and sequence parts
header_seq_pairs = []
current_header = None
current_sequence = ""

for line in lines:
    if line.startswith(">"):
        if current_header is not None:
            header_seq_pairs.append((current_header, current_sequence))
        current_header = line.strip()
        current_sequence = ""
    else:
        current_sequence += line.strip()

# Add the last pair to the list
if current_header is not None:
    header_seq_pairs.append((current_header, current_sequence))
with open("strings_4gs_146147.txt", "w") as outfile:
    for header, sequence in header_seq_pairs:
        header_parts = header.split(':')
        outfile.write(header_parts[0] + ":" + header_parts[1] + "\n")

print("Sorting and writing complete.")
with open("strings_4gs_146147.txt", "r") as file:
    lines = [line.split(":") for line in file]


with open("splitted_strings_4gs_146147_unsel.txt", "w") as file:
    for line in lines:
        line_parts = line[1]
        file.write(line_parts)
